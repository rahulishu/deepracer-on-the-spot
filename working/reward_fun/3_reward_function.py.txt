def reward_function(params):
    # Read input parameters
    track_length = params['track_length']
    distance_from_center = params['distance_from_center']
    progress = params['progress']
    speed = params['speed']
    heading = params['heading']
    waypoints = params['waypoints']
    closest_objects = params['closest_objects']
    track_width = params['track_width']
    is_crashed = params['is_crashed']
    is_reversed = params['is_reversed']
    
    # Initialize reward with a base value
    reward = 1.0
    
    # Penalize if the car is crashed
    if is_crashed:
        return 1e-3

    # Penalize if the car is reversing
    if is_reversed:
        return 1e-3

    # Reward for progress
    reward += progress / track_length

    # Reward for staying close to the centerline
    reward += 1.0 - (distance_from_center / (track_width / 2))

    # Reward for maintaining a good speed
    max_speed = 4.0  # Example maximum speed, adjust if needed
    reward += (speed / max_speed)

    # Reward for smooth steering
    # Encourages minimal steering angle
    steering_angle = abs(params['steering_angle'])
    reward += 1.0 - (steering_angle / 27.0)  # Assuming a max steering angle of 27 degrees

    # Reward for following waypoints effectively
    if len(waypoints) > 1:
        # Calculate the direction to the next waypoint
        next_waypoint = waypoints[1]
        direction = ((next_waypoint[0] - params['x']) ** 2 + (next_waypoint[1] - params['y']) ** 2) ** 0.5
        reward += max(0.1, 1 - (direction / (track_width / 2)))

    return float(reward)

